{
  "name": "Task Completion Auditor",
  "description": "Comprehensive validation of completed task groups using all available MCP servers and project standards",
  "trigger": {
    "type": "manual",
    "label": "Audit Completed Tasks",
    "icon": "check-circle"
  },
  "actions": [
    {
      "type": "agent_execution",
      "prompt": "Perform comprehensive validation of completed tasks for the Brokeranalysis platform:\n\n## TASK GROUP VALIDATION\n\n### Target Task Group: {taskGroup}\n### Validation Scope: {validationScope}\n\n## PHASE 1: PROJECT CONTEXT ANALYSIS\n\n### 1.1 Requirements Verification\n- ✅ Read and analyze `.kiro/specs/*/requirements.md`\n- ✅ Map completed tasks to original requirements\n- ✅ Verify all acceptance criteria are met\n- ✅ Check for any overlooked requirements\n- ✅ Validate requirement traceability\n\n### 1.2 Design Specification Compliance\n- ✅ Review `.kiro/specs/*/design.md` for design specifications\n- ✅ Ensure architectural patterns are followed\n- ✅ Verify component interfaces match design\n- ✅ Check data model implementations\n- ✅ Validate error handling approaches\n\n### 1.3 Task Dependencies Analysis\n- ✅ Review `.kiro/specs/*/tasks.md` for task details\n- ✅ Verify prerequisite tasks are complete\n- ✅ Check for blocking dependencies\n- ✅ Ensure proper task sequence was followed\n- ✅ Validate sub-task completion before parent tasks\n\n### 1.4 Project Standards Review\n- ✅ Consult all `.kiro/steering/*.md` files\n- ✅ Check `project_rules.md` and `user_rules.md` (if exist)\n- ✅ Verify adherence to coding standards\n- ✅ Ensure SEO and design standards compliance\n- ✅ Validate accessibility requirements\n\n## PHASE 2: IMPLEMENTATION QUALITY AUDIT\n\n### 2.1 Code Quality Verification\n- ✅ **TypeScript Compliance**\n  - Strict mode enabled and followed\n  - Proper interfaces defined\n  - No 'any' types used\n  - Return types explicitly defined\n  - Type safety maintained throughout\n\n- ✅ **Architecture Compliance**\n  - Follows project structure patterns\n  - Uses @/ path aliases correctly\n  - Implements proper component patterns\n  - Maintains separation of concerns\n  - Follows Next.js App Router conventions\n\n- ✅ **Performance Standards**\n  - Core Web Vitals optimized (LCP <2.5s, FID <100ms, CLS <0.1)\n  - Proper code splitting implemented\n  - Images optimized with Next.js Image component\n  - Bundle size within acceptable limits\n  - No memory leaks or performance bottlenecks\n\n### 2.2 SEO & Design Standards Verification\n- ✅ **Metadata Completeness**\n  - Every page has proper title with '— Brokeranalysis' suffix\n  - Meta descriptions 150-160 characters\n  - Open Graph tags implemented\n  - Twitter Card tags present\n  - Canonical URLs properly set\n\n- ✅ **Structured Data Implementation**\n  - Appropriate JSON-LD schema (FinancialService/Article/FAQPage)\n  - Broker-specific structured data where relevant\n  - Schema markup syntax validated\n  - All required schema properties present\n\n- ✅ **Design System Adherence**\n  - Uses predefined typography classes (.text-heading-*, .text-body-*)\n  - Implements brand color system and gradients\n  - Applies glass morphism styling (.glass-card, .modern-card)\n  - Uses proper button variants (.cta-primary, .btn-glass)\n  - Maintains professional, clean, modern aesthetic\n\n### 2.3 Accessibility Compliance\n- ✅ **WCAG 2.1 AA Standards**\n  - Color contrast ratios meet minimum 4.5:1\n  - Keyboard navigation fully supported\n  - Screen reader compatibility verified\n  - Proper ARIA labels and semantic HTML\n  - Focus management and indicators present\n\n### 2.4 Broker-Specific Requirements\n- ✅ **Trust Score Integration**\n  - Properly implemented where relevant\n  - Methodology clearly explained\n  - Color coding follows standards\n  - Interactive components functional\n\n- ✅ **Financial Content Standards**\n  - Regulatory compliance information included\n  - Appropriate risk disclaimers present\n  - Claims supported by credible sources\n  - Financial accuracy verified\n  - Content freshness maintained\n\n## PHASE 3: FUNCTIONAL TESTING PROTOCOL\n\n### 3.1 User Journey Testing\n- ✅ Primary workflows complete without errors\n- ✅ Interactive elements fully functional\n- ✅ Forms validate and submit properly\n- ✅ Loading states and error messages appropriate\n- ✅ Cross-browser compatibility verified\n- ✅ Mobile responsiveness confirmed\n\n### 3.2 Integration Testing\n- ✅ Components integrate with existing systems\n- ✅ API calls function correctly\n- ✅ Data flows properly between components\n- ✅ Real-time features working as expected\n- ✅ Database operations perform correctly\n\n### 3.3 Performance Testing\n- ✅ Page load times meet targets\n- ✅ No console errors or warnings\n- ✅ Memory usage acceptable\n- ✅ No layout shifts or visual glitches\n- ✅ Smooth animations and transitions\n\n## PHASE 4: MCP SERVER UTILIZATION\n\n### 4.1 Available MCP Server Analysis\n- ✅ Identify configured MCP servers\n- ✅ Determine relevant servers for validation\n- ✅ Prepare server-specific validation queries\n- ✅ Execute automated checks where possible\n\n### 4.2 MCP Server Validation Results\n- ✅ **AWS Documentation MCP** (if available)\n  - Cloud architecture best practices verified\n  - Security compliance checked\n  - Deployment configurations validated\n\n- ✅ **GitHub MCP** (if available)\n  - Commit history reviewed for completeness\n  - Branching strategy compliance checked\n  - Pull request requirements validated\n\n- ✅ **Database MCP** (if available)\n  - Schema changes verified\n  - Indexing strategies checked\n  - Migration scripts validated\n\n- ✅ **Security MCP** (if available)\n  - Vulnerability scans executed\n  - Secret exposure checks performed\n  - Authentication implementations validated\n\n## PHASE 5: DOCUMENTATION & KNOWLEDGE BASE\n\n### 5.1 Documentation Completeness\n- ✅ Code documentation present and accurate\n- ✅ API documentation updated\n- ✅ User-facing documentation created\n- ✅ Technical decisions recorded\n- ✅ README updates made if necessary\n\n### 5.2 Knowledge Base Updates\n- ✅ Design system documentation updated\n- ✅ Deployment guides current\n- ✅ Best practices documented\n- ✅ Lessons learned recorded\n\n## VALIDATION RESULTS & RECOMMENDATIONS\n\n### Critical Issues (Must Fix Immediately)\n- List any blocking problems that prevent deployment\n- Provide specific fix instructions\n- Estimate time required for resolution\n\n### Important Issues (Fix This Sprint)\n- List significant problems affecting quality\n- Provide detailed remediation steps\n- Assign priority levels\n\n### Minor Issues (Future Backlog)\n- List cosmetic or enhancement opportunities\n- Suggest improvement approaches\n- Document for future consideration\n\n### Success Metrics Achieved\n- ✅ Zero critical issues identified\n- ✅ Performance targets met\n- ✅ Accessibility compliance achieved\n- ✅ SEO optimization complete\n- ✅ User experience validated\n\n## NEXT STEPS & RECOMMENDATIONS\n\n1. **Immediate Actions Required**\n   - List critical fixes needed\n   - Provide implementation guidance\n   - Set completion deadlines\n\n2. **Quality Improvements**\n   - Suggest enhancements\n   - Recommend best practices\n   - Identify optimization opportunities\n\n3. **Future Considerations**\n   - Document enhancement ideas\n   - Note scalability considerations\n   - Record technical debt items\n\n## STAKEHOLDER COMMUNICATION\n\nPrepare comprehensive report including:\n- Task completion status\n- Quality assurance results\n- Issues identified and prioritized\n- Recommendations for next steps\n- Timeline for any required fixes\n\nEnsure all validation follows the Brokeranalysis platform standards and maintains the high quality expected for financial services applications.",\n      \"inputs\": [\n        {\n          \"name\": \"taskGroup\",\n          \"type\": \"text\",\n          \"label\": \"Task Group to Validate\",\n          \"required\": true,\n          \"placeholder\": \"e.g., 'User Authentication System', 'Broker Comparison Tool', 'SEO Implementation'\"\n        },\n        {\n          \"name\": \"validationScope\",\n          \"type\": \"select\",\n          \"label\": \"Validation Scope\",\n          \"options\": [\n            \"Full Comprehensive Audit\",\n            \"Code Quality Focus\",\n            \"SEO & Design Focus\",\n            \"Performance Focus\",\n            \"Accessibility Focus\",\n            \"Security Focus\",\n            \"Integration Testing Focus\"\n          ],\n          \"required\": true\n        }\n      ]\n    }\n  ]\n}